{"expireTime":9007200836293160000,"key":"gatsby-plugin-mdx-entire-payload-fba9eb39e6a77616ca40e8a0f4640ec7-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Data Fetching and Other Side Effects","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":37,"offset":36},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":4,"offset":40},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Topics","position":{"start":{"line":4,"column":1,"offset":42},"end":{"line":4,"column":7,"offset":48},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":42},"end":{"line":4,"column":7,"offset":48},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Run multiple servers","position":{"start":{"line":6,"column":3,"offset":52},"end":{"line":6,"column":23,"offset":72},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":52},"end":{"line":6,"column":23,"offset":72},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":50},"end":{"line":6,"column":23,"offset":72},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Handle component side effects","position":{"start":{"line":7,"column":3,"offset":75},"end":{"line":7,"column":32,"offset":104},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":75},"end":{"line":7,"column":32,"offset":104},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Rules of Hooks","position":{"start":{"line":8,"column":5,"offset":109},"end":{"line":8,"column":19,"offset":123},"indent":[]}}],"position":{"start":{"line":8,"column":5,"offset":109},"end":{"line":8,"column":19,"offset":123},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":107},"end":{"line":8,"column":19,"offset":123},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Dependency array","position":{"start":{"line":9,"column":5,"offset":128},"end":{"line":9,"column":21,"offset":144},"indent":[]}}],"position":{"start":{"line":9,"column":5,"offset":128},"end":{"line":9,"column":21,"offset":144},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":126},"end":{"line":9,"column":21,"offset":144},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Cleanup","position":{"start":{"line":10,"column":5,"offset":149},"end":{"line":10,"column":12,"offset":156},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":149},"end":{"line":10,"column":12,"offset":156},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":147},"end":{"line":10,"column":12,"offset":156},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":107},"end":{"line":10,"column":12,"offset":156},"indent":[3,3]}}],"position":{"start":{"line":7,"column":1,"offset":73},"end":{"line":11,"column":1,"offset":157},"indent":[1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Data fetching with React","position":{"start":{"line":12,"column":3,"offset":160},"end":{"line":12,"column":27,"offset":184},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":160},"end":{"line":12,"column":27,"offset":184},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":158},"end":{"line":12,"column":27,"offset":184},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Compute values from existing state","position":{"start":{"line":13,"column":3,"offset":187},"end":{"line":13,"column":37,"offset":221},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":187},"end":{"line":13,"column":37,"offset":221},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":185},"end":{"line":13,"column":37,"offset":221},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":50},"end":{"line":13,"column":37,"offset":221},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Run multiple servers","position":{"start":{"line":17,"column":4,"offset":228},"end":{"line":17,"column":24,"offset":248},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":225},"end":{"line":17,"column":24,"offset":248},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"run api on a port","position":{"start":{"line":18,"column":3,"offset":251},"end":{"line":18,"column":20,"offset":268},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":251},"end":{"line":18,"column":20,"offset":268},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":249},"end":{"line":18,"column":20,"offset":268},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"client on another","position":{"start":{"line":19,"column":3,"offset":271},"end":{"line":19,"column":20,"offset":288},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":271},"end":{"line":19,"column":20,"offset":288},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":269},"end":{"line":19,"column":20,"offset":288},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":249},"end":{"line":19,"column":20,"offset":288},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Handle component side effects","position":{"start":{"line":21,"column":4,"offset":293},"end":{"line":21,"column":33,"offset":322},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":290},"end":{"line":21,"column":33,"offset":322},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Rules of Hooks","position":{"start":{"line":23,"column":5,"offset":328},"end":{"line":23,"column":19,"offset":342},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":324},"end":{"line":23,"column":19,"offset":342},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Rule #1","position":{"start":{"line":25,"column":3,"offset":346},"end":{"line":25,"column":10,"offset":353},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":344},"end":{"line":25,"column":12,"offset":355},"indent":[]}},{"type":"text","value":"\nDon't call Hooks inside loops, conditions, or nested functions.","position":{"start":{"line":25,"column":12,"offset":355},"end":{"line":26,"column":64,"offset":419},"indent":[1]}}],"position":{"start":{"line":25,"column":1,"offset":344},"end":{"line":26,"column":64,"offset":419},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Rule #2","position":{"start":{"line":28,"column":3,"offset":423},"end":{"line":28,"column":10,"offset":430},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":421},"end":{"line":28,"column":12,"offset":432},"indent":[]}},{"type":"text","value":"\nOnly call Hooks from the top-level of a function component or a custom Hook.","position":{"start":{"line":28,"column":12,"offset":432},"end":{"line":29,"column":77,"offset":509},"indent":[1]}}],"position":{"start":{"line":28,"column":1,"offset":421},"end":{"line":29,"column":77,"offset":509},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Rule #3","position":{"start":{"line":31,"column":3,"offset":513},"end":{"line":31,"column":10,"offset":520},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":511},"end":{"line":31,"column":12,"offset":522},"indent":[]}},{"type":"text","value":"\nThe effect method that we pass to useEffect must either return undefined or a function. The easiest way to avoid issues with this rule is always to declare your effect as a multiline function.","position":{"start":{"line":31,"column":12,"offset":522},"end":{"line":32,"column":193,"offset":715},"indent":[1]}}],"position":{"start":{"line":31,"column":1,"offset":511},"end":{"line":32,"column":193,"offset":715},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"useEffect","position":{"start":{"line":34,"column":5,"offset":721},"end":{"line":34,"column":14,"offset":730},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":717},"end":{"line":34,"column":14,"offset":730},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Add an effect","position":{"start":{"line":36,"column":6,"offset":737},"end":{"line":36,"column":19,"offset":750},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":732},"end":{"line":36,"column":19,"offset":750},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Dependency array","position":{"start":{"line":38,"column":6,"offset":757},"end":{"line":38,"column":22,"offset":773},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":752},"end":{"line":38,"column":22,"offset":773},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Cleanup","position":{"start":{"line":40,"column":6,"offset":780},"end":{"line":40,"column":13,"offset":787},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":775},"end":{"line":40,"column":13,"offset":787},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Data fetching with React","position":{"start":{"line":42,"column":4,"offset":792},"end":{"line":42,"column":28,"offset":816},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":789},"end":{"line":42,"column":28,"offset":816},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Compute values from existing state","position":{"start":{"line":44,"column":4,"offset":821},"end":{"line":44,"column":38,"offset":855},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":818},"end":{"line":44,"column":38,"offset":855},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"selector?","position":{"start":{"line":46,"column":5,"offset":861},"end":{"line":46,"column":14,"offset":870},"indent":[]}}],"position":{"start":{"line":46,"column":5,"offset":861},"end":{"line":46,"column":14,"offset":870},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":857},"end":{"line":46,"column":14,"offset":870},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":857},"end":{"line":46,"column":14,"offset":870},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":48,"column":1,"offset":872},"end":{"line":48,"column":31,"offset":902},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":48,"column":31,"offset":902}}},"scopeImports":["import React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"data-fetching-and-other-side-effects\"\n  }, \"Data Fetching and Other Side Effects\"), mdx(\"p\", null, \"Topics\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Run multiple servers\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Handle component side effects\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rules of Hooks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dependency array\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cleanup\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Data fetching with React\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Compute values from existing state\"))), mdx(\"h2\", {\n    \"id\": \"run-multiple-servers\"\n  }, \"Run multiple servers\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"run api on a port\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"client on another\")), mdx(\"h2\", {\n    \"id\": \"handle-component-side-effects\"\n  }, \"Handle component side effects\"), mdx(\"h3\", {\n    \"id\": \"rules-of-hooks\"\n  }, \"Rules of Hooks\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Rule #1\"), \"\\nDon\\u2019t call Hooks inside loops, conditions, or nested functions.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Rule #2\"), \"\\nOnly call Hooks from the top-level of a function component or a custom Hook.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Rule #3\"), \"\\nThe effect method that we pass to useEffect must either return undefined or a function. The easiest way to avoid issues with this rule is always to declare your effect as a multiline function.\"), mdx(\"h3\", {\n    \"id\": \"useeffect\"\n  }, \"useEffect\"), mdx(\"h4\", {\n    \"id\": \"add-an-effect\"\n  }, \"Add an effect\"), mdx(\"h4\", {\n    \"id\": \"dependency-array\"\n  }, \"Dependency array\"), mdx(\"h4\", {\n    \"id\": \"cleanup\"\n  }, \"Cleanup\"), mdx(\"h2\", {\n    \"id\": \"data-fetching-with-react\"\n  }, \"Data fetching with React\"), mdx(\"h2\", {\n    \"id\": \"compute-values-from-existing-state\"\n  }, \"Compute values from existing state\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"selector?\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"data-fetching-and-other-side-effects\"\n    }}>{`Data Fetching and Other Side Effects`}</h1>\n    <p>{`Topics`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Run multiple servers`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Handle component side effects`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Rules of Hooks`}</li>\n          <li parentName=\"ul\">{`Dependency array`}</li>\n          <li parentName=\"ul\">{`Cleanup`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Data fetching with React`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Compute values from existing state`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"run-multiple-servers\"\n    }}>{`Run multiple servers`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`run api on a port`}</li>\n      <li parentName=\"ul\">{`client on another`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"handle-component-side-effects\"\n    }}>{`Handle component side effects`}</h2>\n    <h3 {...{\n      \"id\": \"rules-of-hooks\"\n    }}>{`Rules of Hooks`}</h3>\n    <p><strong parentName=\"p\">{`Rule #1`}</strong>{`\nDon’t call Hooks inside loops, conditions, or nested functions.`}</p>\n    <p><strong parentName=\"p\">{`Rule #2`}</strong>{`\nOnly call Hooks from the top-level of a function component or a custom Hook.`}</p>\n    <p><strong parentName=\"p\">{`Rule #3`}</strong>{`\nThe effect method that we pass to useEffect must either return undefined or a function. The easiest way to avoid issues with this rule is always to declare your effect as a multiline function.`}</p>\n    <h3 {...{\n      \"id\": \"useeffect\"\n    }}>{`useEffect`}</h3>\n    <h4 {...{\n      \"id\": \"add-an-effect\"\n    }}>{`Add an effect`}</h4>\n    <h4 {...{\n      \"id\": \"dependency-array\"\n    }}>{`Dependency array`}</h4>\n    <h4 {...{\n      \"id\": \"cleanup\"\n    }}>{`Cleanup`}</h4>\n    <h2 {...{\n      \"id\": \"data-fetching-with-react\"\n    }}>{`Data fetching with React`}</h2>\n    <h2 {...{\n      \"id\": \"compute-values-from-existing-state\"\n    }}>{`Compute values from existing state`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`selector?`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}